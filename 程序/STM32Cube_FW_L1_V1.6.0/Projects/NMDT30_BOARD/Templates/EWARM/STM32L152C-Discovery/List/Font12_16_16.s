///////////////////////////////////////////////////////////////////////////////
//
// IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM       31/Dec/2015  12:47:10
// Copyright 1999-2015 IAR Systems AB.
//
//    Cpu mode     =  thumb
//    Endian       =  little
//    Source file  =  
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\Src\Font12_16_16.c
//    Command line =  
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\Src\Font12_16_16.c
//        -D USE_HAL_DRIVER -D STM32L151xCA -D USE_STM32L152C_DISCO -D
//        USE_FULL_ASSERT=1 -D SD_GET_STATUS_WORKAROUND -lA
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\EWARM\STM32L152C-Discovery\List\
//        -o
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\EWARM\STM32L152C-Discovery\Obj\
//        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
//        --no_clustering --no_scheduling --debug --endian=little
//        --cpu=Cortex-M3 -e --fpu=None --dlib_config "F:\ruanjian\IAR
//        Systems\Embedded Workbench 7.2\arm\INC\c\DLib_Config_Full.h" -I
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\EWARM\..\Inc\
//        -I
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\EWARM\..\..\..\..\Drivers\CMSIS\Device\ST\STM32L1xx\Include\
//        -I
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\EWARM\..\..\..\..\Drivers\STM32L1xx_HAL_Driver\Inc\
//        -I
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\EWARM\..\..\..\..\Drivers\BSP\STM32L152C-Discovery\
//        -I
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\EWARM\..\..\..\..\Drivers\BSP\Adafruit_Shield\
//        -I
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\EWARM\..\..\..\..\Middlewares\Third_Party\FatFs\src\
//        -I
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\EWARM\..\..\..\..\Middlewares\Third_Party\FatFs\src\drivers\
//        -I
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\EWARM\..\..\..\..\Middlewares\Third_Party\FatFs\src\option\
//        -On --use_c++_inline --require_prototypes -I "F:\ruanjian\IAR
//        Systems\Embedded Workbench 7.2\arm\CMSIS\Include\"
//    List file    =  
//        E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\EWARM\STM32L152C-Discovery\List\Font12_16_16.s
//
///////////////////////////////////////////////////////////////////////////////

        RTMODEL "__SystemLibrary", "DLib"
        AAPCS BASE,INTERWORK
        PRESERVE8
        REQUIRE8

        #define SHT_PROGBITS 0x1

        PUBLIC HZ_Ceng
        PUBLIC HZ_DiWen
        PUBLIC HZ_FengSu
        PUBLIC HZ_FengXiang
        PUBLIC HZ_FuShe
        PUBLIC HZ_GuangHe
        PUBLIC HZ_LunXunFangShi
        PUBLIC HZ_QiWen
        PUBLIC HZ_ShiDu
        PUBLIC HZ_ShiZhong
        PUBLIC HZ_ShuJu
        PUBLIC HZ_TongXun
        PUBLIC HZ_TuRangShuiFen
        PUBLIC HZ_YuLiang
        PUBLIC HZ_ZiDongFaSongJianGe
        PUBLIC ICON_BAT1_3
        PUBLIC ICON_BAT2_3
        PUBLIC ICON_BAT_Empty
        PUBLIC ICON_BAT_Full
        PUBLIC SS_BlackStar
        PUBLIC SS_Du
        PUBLIC SS_Er
        PUBLIC SS_San
        PUBLIC SS_SheShiDu
        PUBLIC SS_Si
        PUBLIC SS_WhiteStar
        PUBLIC SS_Wu
        PUBLIC SS_Yi
// E:\应用\电路图\NMDT30\数据资料\固件库\stm32cubel1\stm32cubel1\STM32Cube_FW_L1_V1.4.0\Projects\NMDT30_BOARD\Templates\Src\Font12_16_16.c
//    1 /****************************************Copyright (c)****************************************************
//    2 **
//    3 **
//    4 **
//    5 **--------------File Info---------------------------------------------------------------------------------
//    6 ** File name:				FONT12_16_16.h
//    7 ** Latest modified Date:    2008-03-07
//    8 ** Latest Version:          1.0
//    9 ** Descriptions:            12号汉字，取模16X16
//   10 **
//   11 **--------------------------------------------------------------------------------------------------------
//   12 ** Created by:              JGW
//   13 ** Created date:            2008-10-27
//   14 ** Version:                 1.0
//   15 ** Descriptions:            The original version
//   16 **
//   17 **--------------------------------------------------------------------------------------------------------
//   18 ** Modified by:
//   19 ** Modified date:
//   20 ** Version:
//   21 ** Descriptions:
//   22 **
//   23 *********************************************************************************************************/
//   24 
//   25 
//   26 #include "Font12_16_16.h"
//   27 
//   28 
//   29 
//   30 
//   31 /**
//   32   * @}
//   33   */
//   34 
//   35 /**
//   36   * @}
//   37   */
//   38 
//   39 /**
//   40   * 汉字
//   41   */

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//   42 unsigned char const HZ_QiWen[]=			   /* 气温 */
HZ_QiWen:
        DATA
        DC8 0, 0, 64, 32, 16, 92, 80, 80, 80, 80, 80, 24, 16, 0, 0, 0, 0, 0, 0
        DC8 1, 1, 1, 1, 1, 1, 1, 15, 16, 32, 56, 0, 0, 0, 0, 32, 68, 136, 0
        DC8 252, 84, 84, 84, 84, 252, 0, 0, 0, 0, 0, 0, 2, 63, 32, 62, 34, 62
        DC8 34, 34, 62, 34, 62, 32, 0, 0
//   43 {
//   44 	0x00,0x00,0x40,0x20,0x10,0x5C,0x50,0x50,0x50,0x50,0x50,0x18,0x10,0x00,0x00,0x00,
//   45 	0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x0F,0x10,0x20,0x38,0x00,0x00,	  /* 气 */
//   46 
//   47 	0x00,0x00,0x20,0x44,0x88,0x00,0xFC,0x54,0x54,0x54,0x54,0xFC,0x00,0x00,0x00,0x00,
//   48 	0x00,0x00,0x02,0x3F,0x20,0x3E,0x22,0x3E,0x22,0x22,0x3E,0x22,0x3E,0x20,0x00,0x00		  /* 温 */
//   49 };
//   50 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//   51 unsigned char const HZ_ShiDu[]=			   /* 湿度 */
HZ_ShiDu:
        DATA
        DC8 0, 0, 32, 68, 136, 0, 252, 84, 84, 84, 84, 84, 252, 0, 0, 0, 0, 0
        DC8 2, 63, 32, 34, 44, 32, 63, 32, 63, 36, 34, 33, 0, 0, 0, 0, 0, 0
        DC8 248, 40, 40, 248, 172, 168, 248, 40, 40, 0, 0, 0, 0, 0, 48, 8, 39
        DC8 32, 18, 22, 10, 22, 18, 32, 32, 32, 0, 0
//   52 {
//   53 	0x00,0x00,0x20,0x44,0x88,0x00,0xFC,0x54,0x54,0x54,0x54,0x54,0xFC,0x00,0x00,0x00,
//   54 	0x00,0x00,0x02,0x3F,0x20,0x22,0x2C,0x20,0x3F,0x20,0x3F,0x24,0x22,0x21,0x00,0x00,	  /* 湿 */
//   55 
//   56 	0x00,0x00,0x00,0x00,0xF8,0x28,0x28,0xF8,0xAC,0xA8,0xF8,0x28,0x28,0x00,0x00,0x00,
//   57 	0x00,0x00,0x30,0x08,0x27,0x20,0x12,0x16,0x0A,0x16,0x12,0x20,0x20,0x20,0x00,0x00		  /* 度 */
//   58 };
//   59 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//   60 unsigned char const HZ_YuLiang[]=		   /* 雨量 */
HZ_YuLiang:
        DATA
        DC8 0, 0, 8, 232, 40, 168, 40, 248, 40, 168, 40, 40, 236, 8, 0, 0, 0, 0
        DC8 0, 63, 2, 4, 1, 63, 0, 2, 21, 32, 31, 0, 0, 0, 0, 0, 32, 32, 188
        DC8 164, 164, 172, 180, 164, 164, 188, 32, 32, 0, 0, 0, 0, 32, 32, 47
        DC8 42, 42, 63, 42, 42, 42, 47, 32, 32, 0, 0
//   61 {
//   62 	0x00,0x00,0x08,0xE8,0x28,0xA8,0x28,0xF8,0x28,0xA8,0x28,0x28,0xEC,0x08,0x00,0x00,
//   63 	0x00,0x00,0x00,0x3F,0x02,0x04,0x01,0x3F,0x00,0x02,0x15,0x20,0x1F,0x00,0x00,0x00,	  /* 雨 */
//   64 
//   65 	0x00,0x00,0x20,0x20,0xBC,0xA4,0xA4,0xAC,0xB4,0xA4,0xA4,0xBC,0x20,0x20,0x00,0x00,
//   66 	0x00,0x00,0x20,0x20,0x2F,0x2A,0x2A,0x3F,0X2A,0x2A,0x2A,0x2F,0x20,0x20,0x00,0x00		  /* 量 */
//   67 };
//   68 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//   69 unsigned char const HZ_DiWen[]=			   /* 地温 */
HZ_DiWen:
        DATA
        DC8 0, 0, 64, 64, 248, 64, 128, 240, 128, 252, 64, 32, 240, 32, 0, 0, 0
        DC8 0, 16, 8, 15, 4, 0, 31, 32, 39, 32, 34, 35, 56, 0, 0, 0, 0, 32, 68
        DC8 136, 0, 252, 84, 84, 84, 84, 252, 0, 0, 0, 0, 0, 0, 2, 63, 32, 62
        DC8 34, 62, 34, 34, 62, 34, 62, 32, 0, 0
//   70 {
//   71 	0x00,0x00,0x40,0x40,0xF8,0x40,0x80,0xF0,0x80,0xFC,0x40,0x20,0xF0,0x20,0x00,0x00,
//   72 	0x00,0x00,0x10,0x08,0x0F,0x04,0x00,0x1F,0x20,0x27,0x20,0x22,0x23,0x38,0x00,0x00,	  /* 地 */
//   73 
//   74 	0x00,0x00,0x20,0x44,0x88,0x00,0xFC,0x54,0x54,0x54,0x54,0xFC,0x00,0x00,0x00,0x00,
//   75 	0x00,0x00,0x02,0x3F,0x20,0x3E,0x22,0x3E,0x22,0x22,0x3E,0x22,0x3E,0x20,0x00,0x00		  /* 温 */
//   76 };
//   77 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//   78 unsigned char const HZ_FuShe[]=			   /* 辐射 */
HZ_FuShe:
        DATA
        DC8 0, 0, 208, 176, 220, 144, 144, 8, 232, 168, 168, 168, 236, 8, 0, 0
        DC8 0, 0, 4, 4, 63, 2, 0, 62, 42, 42, 62, 42, 42, 62, 0, 0, 0, 0, 0
        DC8 248, 168, 172, 168, 248, 32, 32, 32, 32, 252, 32, 0, 0, 0, 0, 34
        DC8 19, 10, 6, 34, 63, 0, 1, 22, 32, 31, 0, 0, 0
//   79 {
//   80 	0x00,0x00,0xD0,0xB0,0xDC,0x90,0x90,0x08,0xE8,0xA8,0xA8,0xA8,0xEC,0x08,0x00,0x00,
//   81 	0x00,0x00,0x04,0x04,0x3F,0x02,0x00,0x3E,0x2A,0x2A,0x3E,0x2A,0x2A,0x3E,0x00,0x00,	  /* 辐 */
//   82 
//   83 	0x00,0x00,0x00,0xF8,0xA8,0xAC,0xA8,0xF8,0x20,0x20,0x20,0x20,0xFC,0x20,0x00,0x00,
//   84 	0x00,0x00,0x22,0x13,0x0A,0x06,0x22,0x3F,0x00,0x01,0x16,0x20,0x1F,0x00,0x00,0x00		  /* 射 */
//   85 };
//   86 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//   87 unsigned char const HZ_GuangHe[]=		   /* 光合 */
HZ_GuangHe:
        DATA
        DC8 0, 0, 128, 128, 136, 176, 128, 128, 252, 128, 160, 152, 192, 128, 0
        DC8 0, 0, 0, 32, 32, 16, 8, 7, 0, 0, 31, 32, 32, 32, 60, 0, 0, 0, 0
        DC8 128, 128, 64, 160, 144, 140, 136, 144, 160, 64, 128, 128, 0, 0, 0
        DC8 0, 0, 0, 0, 62, 18, 18, 18, 18, 18, 62, 0, 0, 0, 0
//   88 {
//   89 	0x00,0x00,0x80,0x80,0x88,0xB0,0x80,0x80,0xFC,0x80,0xA0,0x98,0xC0,0x80,0x00,0x00,	  /* 光 */
//   90 	0x00,0x00,0x20,0x20,0x10,0x08,0x07,0x00,0x00,0x1F,0x20,0x20,0x20,0x3C,0x00,0x00,
//   91 
//   92 	0x00,0x00,0x80,0x80,0x40,0xA0,0x90,0x8C,0x88,0x90,0xA0,0x40,0x80,0x80,0x00,0x00,	  /* 合 */
//   93 	0x00,0x00,0x00,0x00,0x00,0x3E,0x12,0x12,0x12,0x12,0x12,0x3E,0x00,0x00,0x00,0x00
//   94 };
//   95 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//   96 unsigned char const HZ_TuRangShuiFen[]=		   /* 土壤水分 */
HZ_TuRangShuiFen:
        DATA
        DC8 0, 0, 0, 64, 64, 64, 64, 64, 252, 64, 64, 96, 64, 0, 0, 0, 0, 0, 16
        DC8 16, 16, 16, 16, 16, 31, 16, 16, 16, 24, 16, 0, 0, 0, 0, 32, 252, 32
        DC8 40, 120, 216, 120, 12, 120, 216, 120, 8, 0, 0, 0, 0, 4, 7, 34, 36
        DC8 21, 63, 37, 21, 13, 23, 45, 36, 0, 0, 0, 0, 32, 32, 32, 160, 96, 0
        DC8 252, 128, 64, 32, 16, 0, 0, 0, 0, 0, 16, 8, 6, 1, 16, 32, 31, 0, 3
        DC8 4, 24, 8, 0, 0, 0, 0, 0, 128, 192, 176, 140, 128, 128, 156, 160, 64
        DC8 128, 128, 0, 0, 0, 0, 1, 32, 32, 24, 7, 0, 16, 32, 31, 0, 0, 0, 0
        DC8 0
//   97 {
//   98 	0x00,0x00,0x00,0x40,0x40,0x40,0x40,0x40,0xFC,0x40,0x40,0x60,0x40,0x00,0x00,0x00,
//   99 	0x00,0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x1F,0x10,0x10,0x10,0x18,0x10,0x00,0x00,	 /* 土 */
//  100 
//  101 	0x00,0x00,0x20,0xFC,0x20,0x28,0x78,0xD8,0x78,0x0C,0x78,0xD8,0x78,0x08,0x00,0x00,
//  102 	0x00,0x00,0x04,0x07,0x22,0x24,0x15,0x3F,0x25,0x15,0x0D,0x17,0x2D,0x24,0x00,0x00,	 /* 壤 */
//  103 
//  104 	0x00,0x00,0x20,0x20,0x20,0xA0,0x60,0x00,0xFC,0x80,0x40,0x20,0x10,0x00,0x00,0x00,
//  105 	0x00,0x00,0x10,0x08,0x06,0x01,0x10,0x20,0x1F,0x00,0x03,0x04,0x18,0x08,0x00,0x00,	 /* 水 */
//  106 
//  107 	0x00,0x00,0x00,0x80,0xC0,0xB0,0x8C,0x80,0x80,0x9C,0xA0,0x40,0x80,0x80,0x00,0x00,
//  108 	0x00,0x00,0x01,0x20,0x20,0x18,0x07,0x00,0x10,0x20,0x1F,0x00,0x00,0x00,0x00,0x00		 /* 分 */
//  109 };
//  110 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  111 unsigned char const HZ_FengXiang[]=	           /* 风向 */
HZ_FengXiang:
        DATA
        DC8 0, 0, 0, 0, 248, 40, 72, 136, 104, 8, 8, 252, 8, 0, 0, 0, 0, 0, 32
        DC8 24, 7, 4, 2, 1, 2, 12, 0, 15, 16, 60, 0, 0, 0, 0, 0, 240, 16, 16
        DC8 152, 148, 144, 208, 144, 16, 248, 16, 0, 0, 0, 0, 0, 63, 0, 0, 15
        DC8 4, 4, 15, 16, 32, 63, 0, 0, 0
//  112 {
//  113 	0x00,0x00,0x00,0x00,0xF8,0x28,0x48,0x88,0x68,0x08,0x08,0xFC,0x08,0x00,0x00,0x00,
//  114 	0x00,0x00,0x20,0x18,0x07,0x04,0x02,0x01,0x02,0x0C,0x00,0x0F,0x10,0x3C,0x00,0x00,         /* 风 */
//  115         
//  116         0x00,0x00,0x00,0xF0,0x10,0x10,0x98,0x94,0x90,0xD0,0x90,0x10,0xF8,0x10,0x00,0x00,
//  117 	0x00,0x00,0x00,0x3F,0x00,0x00,0x0F,0x04,0x04,0x0F,0x10,0x20,0x3F,0x00,0x00,0x00          /* 向 */
//  118 };
//  119 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  120 unsigned char const HZ_FengSu[]=	           /* 风速 */
HZ_FengSu:
        DATA
        DC8 0, 0, 0, 0, 248, 40, 72, 136, 104, 8, 8, 252, 8, 0, 0, 0, 0, 0, 32
        DC8 24, 7, 4, 2, 1, 2, 12, 0, 15, 16, 60, 0, 0, 0, 0, 128, 136, 176, 0
        DC8 232, 168, 168, 252, 168, 168, 236, 8, 0, 0, 0, 0, 32, 16, 15, 16
        DC8 41, 36, 34, 63, 34, 36, 41, 32, 0, 0
//  121 {
//  122 	0x00,0x00,0x00,0x00,0xF8,0x28,0x48,0x88,0x68,0x08,0x08,0xFC,0x08,0x00,0x00,0x00,
//  123 	0x00,0x00,0x20,0x18,0x07,0x04,0x02,0x01,0x02,0x0C,0x00,0x0F,0x10,0x3C,0x00,0x00,         /* 风 */
//  124         
//  125         0x00,0x00,0x80,0x88,0xB0,0x00,0xE8,0xA8,0xA8,0xFC,0xA8,0xA8,0xEC,0x08,0x00,0x00,
//  126 	0x00,0x00,0x20,0x10,0x0F,0x10,0x29,0x24,0x22,0x3F,0x22,0x24,0x29,0x20,0x00,0x00          /* 速 */
//  127 };
//  128 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  129 unsigned char const HZ_ShuJu[]=			   /* 数据 */
HZ_ShuJu:
        DATA
        DC8 0, 0, 148, 88, 48, 252, 88, 20, 64, 48, 28, 144, 112, 16, 0, 0, 0
        DC8 0, 34, 38, 27, 10, 22, 34, 32, 19, 12, 19, 32, 32, 0, 0, 0, 0, 32
        DC8 32, 252, 160, 32, 248, 168, 168, 232, 168, 188, 136, 0, 0, 0, 0, 17
        DC8 33, 31, 32, 28, 3, 60, 20, 23, 20, 62, 4, 0, 0
//  130 {
//  131 	0x00,0x00,0x94,0x58,0x30,0xFC,0x58,0x14,0x40,0x30,0x1C,0x90,0x70,0x10,0x00,0x00,
//  132 	0x00,0x00,0x22,0x26,0x1B,0x0A,0x16,0x22,0x20,0x13,0x0C,0x13,0x20,0x20,0x00,0x00,         /* 数 */
//  133         
//  134         0x00,0x00,0x20,0x20,0xFC,0xA0,0x20,0xF8,0xA8,0xA8,0xE8,0xA8,0xBC,0x88,0x00,0x00,
//  135 	0x00,0x00,0x11,0x21,0x1F,0x20,0x1C,0x03,0x3C,0x14,0x17,0x14,0x3E,0x04,0x00,0x00          /* 据 */
//  136 };
//  137 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  138 unsigned char const HZ_TongXun[]=		   /* 通讯 */
HZ_TongXun:
        DATA
        DC8 0, 0, 128, 136, 144, 0, 228, 164, 172, 244, 172, 164, 228, 0, 0, 0
        DC8 0, 0, 32, 16, 15, 16, 47, 34, 0, 47, 34, 42, 47, 32, 0, 0, 0, 0, 64
        DC8 68, 200, 0, 136, 136, 248, 136, 136, 252, 8, 0, 0, 0, 0, 0, 0, 0
        DC8 31, 8, 0, 0, 63, 0, 0, 31, 32, 60, 0, 0
//  139 {
//  140 	0x00,0x00,0x80,0x88,0x90,0x00,0xE4,0xA4,0xAC,0xF4,0xAC,0xA4,0xE4,0x00,0x00,0x00,
//  141 	0x00,0x00,0x20,0x10,0x0F,0x10,0x2F,0x22,0x00,0x2F,0x22,0x2A,0x2F,0x20,0x00,0x00,         /* 通 */
//  142         
//  143         0x00,0x00,0x40,0x44,0xC8,0x00,0x88,0x88,0xF8,0x88,0x88,0xFC,0x08,0x00,0x00,0x00,
//  144 	0x00,0x00,0x00,0x00,0x1F,0x08,0x00,0x00,0x3F,0x00,0x00,0x1F,0x20,0x3C,0x00,0x00          /* 讯 */
//  145 };
//  146 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  147 unsigned char const HZ_ShiZhong[]=                /* 时钟 */
HZ_ShiZhong:
        DATA
        DC8 0, 0, 240, 144, 144, 144, 240, 32, 160, 32, 32, 252, 32, 32, 0, 0
        DC8 0, 0, 15, 4, 4, 4, 15, 0, 0, 19, 32, 63, 0, 0, 0, 0, 0, 0, 64, 112
        DC8 220, 80, 80, 224, 32, 32, 252, 32, 32, 224, 0, 0, 0, 0, 1, 1, 63
        DC8 17, 9, 3, 1, 1, 63, 1, 1, 3, 0, 0
//  148 {
//  149 	0x00,0x00,0xF0,0x90,0x90,0x90,0xF0,0x20,0xA0,0x20,0x20,0xFC,0x20,0x20,0x00,0x00,
//  150 	0x00,0x00,0x0F,0x04,0x04,0x04,0x0F,0x00,0x00,0x13,0x20,0x3F,0x00,0x00,0x00,0x00,         /* 时 */
//  151         
//  152         0x00,0x00,0x40,0x70,0xDC,0x50,0x50,0xE0,0x20,0x20,0xFC,0x20,0x20,0xE0,0x00,0x00,
//  153 	0x00,0x00,0x01,0x01,0x3F,0x11,0x09,0x03,0x01,0x01,0x3F,0x01,0x01,0x03,0x00,0x00          /* 钟 */
//  154 };
//  155 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  156 unsigned char const HZ_ZiDongFaSongJianGe[]=     /* 自动发送间隔 */
HZ_ZiDongFaSongJianGe:
        DATA
        DC8 0, 0, 0, 0, 240, 144, 144, 152, 148, 144, 144, 248, 16, 0, 0, 0, 0
        DC8 0, 0, 0, 63, 20, 20, 20, 20, 20, 20, 63, 0, 0, 0, 0, 0, 0, 64, 72
        DC8 72, 200, 72, 64, 32, 32, 252, 32, 32, 224, 0, 0, 0, 0, 4, 14, 5, 36
        DC8 38, 20, 8, 6, 1, 16, 32, 31, 0, 0, 0, 0, 0, 32, 56, 32, 224, 188
        DC8 160, 160, 168, 168, 32, 32, 0, 0, 0, 0, 16, 8, 36, 35, 32, 18, 20
        DC8 12, 18, 17, 48, 16, 0, 0, 0, 0, 128, 136, 144, 0, 164, 168, 160
        DC8 240, 168, 164, 160, 0, 0, 0, 0, 0, 32, 16, 15, 16, 40, 36, 34, 33
        DC8 34, 36, 44, 32, 0, 0, 0, 0, 0, 240, 4, 8, 224, 168, 168, 232, 8, 8
        DC8 252, 8, 0, 0, 0, 0, 0, 63, 0, 0, 15, 4, 4, 7, 16, 32, 63, 0, 0, 0
        DC8 0, 0, 248, 72, 168, 24, 136, 232, 168, 168, 168, 232, 140, 136, 0
        DC8 0, 0, 0, 63, 2, 4, 3, 63, 4, 6, 28, 6, 4, 36, 31, 0, 0
//  157 {
//  158 	0x00,0x00,0x00,0x00,0xF0,0x90,0x90,0x98,0x94,0x90,0x90,0xF8,0x10,0x00,0x00,0x00,
//  159 	0x00,0x00,0x00,0x00,0x3F,0x14,0x14,0x14,0x14,0x14,0x14,0x3F,0x00,0x00,0x00,0x00,	   /* 自 */
//  160 
//  161 	0x00,0x00,0x40,0x48,0x48,0xC8,0x48,0x40,0x20,0x20,0xFC,0x20,0x20,0xE0,0x00,0x00,
//  162 	0x00,0x00,0x04,0x0E,0x05,0x24,0x26,0x14,0x08,0x06,0x01,0x10,0x20,0x1F,0x00,0x00,	   /* 动 */
//  163 
//  164 	0x00,0x00,0x00,0x20,0x38,0x20,0xE0,0xBC,0xA0,0xA0,0xA8,0xA8,0x20,0x20,0x00,0x00,
//  165 	0x00,0x00,0x10,0x08,0x24,0x23,0x20,0x12,0x14,0x0C,0x12,0x11,0x30,0x10,0x00,0x00,	   /* 发 */
//  166 
//  167 	0x00,0x00,0x80,0x88,0x90,0x00,0xA4,0xA8,0xA0,0xF0,0xA8,0xA4,0xA0,0x00,0x00,0x00,
//  168 	0x00,0x00,0x20,0x10,0x0F,0x10,0x28,0x24,0x22,0x21,0x22,0x24,0x2C,0x20,0x00,0x00,	   /* 送 */
//  169 
//  170 	0x00,0x00,0x00,0xF0,0x04,0x08,0xE0,0xA8,0xA8,0xE8,0x08,0x08,0xFC,0x08,0x00,0x00,
//  171 	0x00,0x00,0x00,0x3F,0x00,0x00,0x0F,0x04,0x04,0x07,0x10,0x20,0x3F,0x00,0x00,0x00,	   /* 间 */
//  172 
//  173 	0x00,0x00,0xF8,0x48,0xA8,0x18,0x88,0xE8,0xA8,0xA8,0xA8,0xE8,0x8C,0x88,0x00,0x00,
//  174 	0x00,0x00,0x3F,0x02,0x04,0x03,0x3F,0x04,0x06,0x1C,0x06,0x04,0x24,0x1F,0x00,0x00		   /* 隔 */
//  175 };
//  176 
//  177 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  178 unsigned char const HZ_LunXunFangShi[]=	        /* 轮询方式 */
HZ_LunXunFangShi:
        DATA
        DC8 0, 0, 144, 240, 156, 208, 144, 64, 176, 12, 16, 32, 64, 64, 0, 0, 0
        DC8 0, 4, 4, 4, 63, 2, 0, 31, 34, 34, 33, 32, 56, 0, 0, 0, 0, 64, 68
        DC8 200, 32, 16, 220, 80, 80, 208, 16, 248, 16, 0, 0, 0, 0, 0, 0, 31, 8
        DC8 0, 15, 5, 5, 47, 32, 31, 0, 0, 0, 0, 0, 32, 32, 32, 32, 32, 228
        DC8 184, 160, 160, 160, 48, 32, 0, 0, 0, 0, 0, 32, 16, 8, 6, 1, 16, 32
        DC8 16, 15, 0, 0, 0, 0, 0, 0, 16, 144, 144, 144, 144, 144, 16, 252, 16
        DC8 20, 24, 16, 0, 0, 0, 0, 16, 16, 16, 15, 8, 8, 8, 3, 12, 16, 32, 56
        DC8 0, 0
//  179 {
//  180 	0x00,0x00,0x90,0xF0,0x9C,0xD0,0x90,0x40,0xB0,0x0C,0x10,0x20,0x40,0x40,0x00,0x00,
//  181 	0x00,0x00,0x04,0x04,0x04,0x3F,0x02,0x00,0x1F,0x22,0x22,0x21,0x20,0x38,0x00,0x00,	   /* 轮 */
//  182 
//  183 	0x00,0x00,0x40,0x44,0xC8,0x20,0x10,0xDC,0x50,0x50,0xD0,0x10,0xF8,0x10,0x00,0x00,
//  184 	0x00,0x00,0x00,0x00,0x1F,0x08,0x00,0x0F,0x05,0x05,0x2F,0x20,0x1F,0x00,0x00,0x00,	   /* 询 */
//  185 
//  186 	0x00,0x00,0x20,0x20,0x20,0x20,0x20,0xE4,0xB8,0xA0,0xA0,0xA0,0x30,0x20,0x00,0x00,
//  187 	0x00,0x00,0x00,0x20,0x10,0x08,0x06,0x01,0x10,0x20,0x10,0x0F,0x00,0x00,0x00,0x00,	   /* 方 */
//  188 
//  189 	0x00,0x00,0x10,0x90,0x90,0x90,0x90,0x90,0x10,0xFC,0x10,0x14,0x18,0x10,0x00,0x00,
//  190 	0x00,0x00,0x10,0x10,0x10,0x0F,0x08,0x08,0x08,0x03,0x0C,0x10,0x20,0x38,0x00,0x00 	   /* 式 */
//  191 };
//  192 
//  193 
//  194 
//  195 
//  196 /**
//  197   * @}
//  198   */
//  199 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  200 unsigned char const HZ_Ceng[]=			   /* 层 */
HZ_Ceng:
        DATA
        DC8 0, 0, 0, 0, 248, 40, 168, 168, 168, 168, 168, 168, 188, 8, 0, 0, 0
        DC8 0, 16, 8, 7, 18, 58, 22, 18, 18, 18, 26, 50, 2, 0, 0
//  201 {
//  202 	0x00,0x00,0x00,0x00,0xF8,0x28,0xA8,0xA8,0xA8,0xA8,0xA8,0xA8,0xBC,0x08,0x00,0x00,
//  203 	0x00,0x00,0x10,0x08,0x07,0x12,0x3A,0x16,0x12,0x12,0x12,0x1A,0x32,0x02,0x00,0x00
//  204 };
//  205 
//  206 /**
//  207   * @}
//  208   */
//  209 
//  210 
//  211 
//  212 /**
//  213   * 图形，特殊符号
//  214   */
//  215 /* Special Symbol */

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  216 unsigned char const SS_SheShiDu[]=	     /* ℃ */
SS_SheShiDu:
        DATA
        DC8 0, 0, 0, 24, 216, 224, 16, 8, 8, 8, 16, 48, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 3, 7, 8, 16, 16, 16, 8, 4, 0, 0, 0, 0
//  217 {
//  218 	0x00,0x00,0x00,0x18,0xD8,0xE0,0x10,0x08,0x08,0x08,0x10,0x30,0x00,0x00,0x00,0x00,
//  219 	0x00,0x00,0x00,0x00,0x03,0x07,0x08,0x10,0x10,0x10,0x08,0x04,0x00,0x00,0x00,0x00
//  220 };
//  221 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  222 unsigned char const SS_Du[]=	             /* ° */
SS_Du:
        DATA
        DC8 0, 0, 0, 0, 24, 36, 36, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//  223 {
//  224 	0x00,0x00,0x00,0x00,0x18,0x24,0x24,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//  225 	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
//  226 };
//  227 

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  228 unsigned char const SS_Yi[]=				/* ㈠ */
SS_Yi:
        DATA
        DC8 0, 0, 240, 8, 0, 0, 0, 0, 0, 0, 128, 0, 8, 240, 0, 0, 0, 0, 15, 16
        DC8 1, 1, 1, 1, 1, 1, 1, 1, 16, 15, 0, 0
//  229 {
//  230 	0x00,0x00,0xF0,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x08,0xF0,0x00,0x00,
//  231 	0x00,0x00,0x0F,0x10,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x10,0x0F,0x00,0x00
//  232 };

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  233 unsigned char const SS_Er[]=				/* ㈡ */
SS_Er:
        DATA
        DC8 0, 0, 240, 8, 0, 32, 32, 32, 32, 48, 32, 0, 8, 240, 0, 0, 0, 0, 15
        DC8 16, 4, 4, 4, 4, 4, 4, 6, 4, 16, 15, 0, 0
//  234 {
//  235 	0x00,0x00,0xF0,0x08,0x00,0x20,0x20,0x20,0x20,0x30,0x20,0x00,0x08,0xF0,0x00,0x00,
//  236 	0x00,0x00,0x0F,0x10,0x04,0x04,0x04,0x04,0x04,0x04,0x06,0x04,0x10,0x0F,0x00,0x00
//  237 };

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  238 unsigned char const SS_San[]=			        /* ㈢ */
SS_San:
        DATA
        DC8 0, 0, 240, 8, 0, 32, 32, 32, 32, 176, 32, 0, 8, 240, 0, 0, 0, 0, 15
        DC8 16, 8, 9, 9, 9, 9, 9, 13, 8, 16, 15, 0, 0
//  239 {
//  240 	0x00,0x00,0xF0,0x08,0x00,0x20,0x20,0x20,0x20,0xB0,0x20,0x00,0x08,0xF0,0x00,0x00,
//  241 	0x00,0x00,0x0F,0x10,0x08,0x09,0x09,0x09,0x09,0x09,0x0D,0x08,0x10,0x0F,0x00,0x00
//  242 };

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  243 unsigned char const SS_Si[]=			        /* ㈣ */
SS_Si:
        DATA
        DC8 0, 0, 240, 8, 224, 32, 224, 32, 224, 32, 240, 32, 8, 240, 0, 0, 0
        DC8 0, 15, 16, 15, 5, 4, 4, 5, 5, 15, 0, 16, 15, 0, 0
//  244 {
//  245 	0x00,0x00,0xF0,0x08,0xE0,0x20,0xE0,0x20,0xE0,0x20,0xF0,0x20,0x08,0xF0,0x00,0x00,
//  246 	0x00,0x00,0x0F,0x10,0x0F,0x05,0x04,0x04,0x05,0x05,0x0F,0x00,0x10,0x0F,0x00,0x00
//  247 };

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  248 unsigned char const SS_Wu[]=			        /* ㈤ */
SS_Wu:
        DATA
        DC8 0, 0, 240, 8, 0, 160, 160, 224, 160, 176, 160, 0, 8, 240, 0, 0, 0
        DC8 0, 15, 16, 8, 8, 14, 9, 8, 14, 9, 8, 16, 15, 0, 0
//  249 {
//  250 	0x00,0x00,0xF0,0x08,0x00,0xA0,0xA0,0xE0,0xA0,0xB0,0xA0,0x00,0x08,0xF0,0x00,0x00,
//  251 	0x00,0x00,0x0F,0x10,0x08,0x08,0x0E,0x09,0x08,0x0E,0x09,0x08,0x10,0x0F,0x00,0x00
//  252 };

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  253 unsigned char const SS_WhiteStar[]=	   /* ☆ */
SS_WhiteStar:
        DATA
        DC8 0, 0, 64, 192, 64, 64, 48, 12, 48, 64, 64, 192, 64, 0, 0, 0, 0, 0
        DC8 0, 0, 57, 22, 8, 4, 8, 22, 57, 0, 0, 0, 0, 0
//  254 {
//  255 	0x00,0x00,0x40,0xC0,0x40,0x40,0x30,0x0C,0x30,0x40,0x40,0xC0,0x40,0x00,0x00,0x00,
//  256 	0x00,0x00,0x00,0x00,0x39,0x16,0x08,0x04,0x08,0x16,0x39,0x00,0x00,0x00,0x00,0x00
//  257 };

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  258 unsigned char const SS_BlackStar[]=	   /* ★ */
SS_BlackStar:
        DATA
        DC8 0, 0, 64, 192, 192, 192, 240, 252, 240, 192, 192, 192, 64, 0, 0, 0
        DC8 0, 0, 0, 32, 25, 31, 15, 7, 15, 31, 25, 32, 0, 0, 0, 0
//  259 {
//  260 	0x00,0x00,0x40,0xC0,0xC0,0xC0,0xF0,0xFC,0xF0,0xC0,0xC0,0xC0,0x40,0x00,0x00,0x00,
//  261 	0x00,0x00,0x00,0x20,0x19,0x1F,0x0F,0x07,0x0F,0x1F,0x19,0x20,0x00,0x00,0x00,0x00
//  262 };
//  263 
//  264 
//  265 /* Battery Icon */
//  266 /* 满 */

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  267 unsigned char const ICON_BAT_Full[]=
ICON_BAT_Full:
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 192, 192, 240, 240, 16, 240, 240, 16, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 3, 3, 15, 15, 8, 15, 15, 8, 240, 240, 16, 240
        DC8 240, 16, 240, 240, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 8, 15, 15, 8, 15
        DC8 15, 0, 0, 0, 0, 0, 0, 0, 0
//  268 {
//  269 	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xF0,0xF0,0x10,0xF0,0xF0,0x10,
//  270 	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x0F,0x0F,0x08,0x0F,0x0F,0x08,
//  271 	0xF0,0xF0,0x10,0xF0,0xF0,0x10,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//  272 	0x0F,0x0F,0x08,0x0F,0x0F,0x08,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
//  273 };
//  274 /* 2/3满 */

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  275 unsigned char const ICON_BAT2_3[]=
ICON_BAT2_3:
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 192, 192, 240, 240, 16, 16, 16, 16, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 3, 3, 15, 15, 8, 8, 8, 8, 240, 240, 16, 240, 240, 16
        DC8 240, 240, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 8, 15, 15, 8, 15, 15, 0
        DC8 0, 0, 0, 0, 0, 0, 0
//  276 {
//  277 	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xF0,0xF0,0x10,0x10,0x10,0x10,
//  278 	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x0F,0x0F,0x08,0x08,0x08,0x08,
//  279 	0xF0,0xF0,0x10,0xF0,0xF0,0x10,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//  280 	0x0F,0x0F,0x08,0x0F,0x0F,0x08,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
//  281 };
//  282 /* 1/3满 */

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  283 unsigned char const ICON_BAT1_3[]=
ICON_BAT1_3:
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 192, 192, 240, 240, 16, 16, 16, 16, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 3, 3, 15, 15, 8, 8, 8, 8, 16, 16, 16, 240, 240, 16
        DC8 240, 240, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 15, 15, 8, 15, 15, 0, 0
        DC8 0, 0, 0, 0, 0, 0
//  284 {
//  285 	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xF0,0xF0,0x10,0x10,0x10,0x10,
//  286 	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x0F,0x0F,0x08,0x08,0x08,0x08,
//  287 	0x10,0x10,0x10,0xF0,0xF0,0x10,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//  288 	0x08,0x08,0x08,0x0F,0x0F,0x08,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
//  289 };
//  290 /* 空 */

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  291 unsigned char const ICON_BAT_Empty[]=
ICON_BAT_Empty:
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 192, 192, 240, 240, 16, 16, 16, 16, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 3, 3, 15, 15, 8, 8, 8, 8, 16, 16, 16, 16, 16, 16
        DC8 240, 240, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 15, 15, 0, 0, 0
        DC8 0, 0, 0, 0, 0

        SECTION `.iar_vfe_header`:DATA:NOALLOC:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
        DC32 0

        END
//  292 {
//  293 	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xF0,0xF0,0x10,0x10,0x10,0x10,
//  294 	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x0F,0x0F,0x08,0x08,0x08,0x08,
//  295 	0x10,0x10,0x10,0x10,0x10,0x10,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//  296 	0x08,0x08,0x08,0x08,0x08,0x08,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
//  297 };
//  298 
//  299 
//  300 
//  301 /**
//  302   * @}
//  303   */
//  304 
//  305 /**
//  306   * @}
//  307   */
//  308 
//  309 
//  310 
// 
// 1 728 bytes in section .rodata
// 
// 1 728 bytes of CONST memory
//
//Errors: none
//Warnings: none
